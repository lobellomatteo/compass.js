class Compass{constructor(){this.Routes=[]}async init(){const routeElements=document.querySelectorAll("[route]");for(let i=0;i<routeElements.length;i++){const routeElement=routeElements[i];let routeConfig={element:routeElement,route:routeElement.getAttribute("route")};this.Routes.push(routeConfig);const viewUrl=routeElement.getAttribute("view");if(viewUrl){const viewHtml=await this._fetchViewHtmlAsync(viewUrl);routeElement.innerHTML=viewHtml;const scripts=routeElement.getElementsByTagName("script");for(let i=0;i<scripts.length;i++){const scriptWrapper=eval("(function() { "+scripts[i].innerText+"})"),script=new scriptWrapper;routeConfig.scripts=routeConfig.scripts||[],routeConfig.scripts.push(script)}}}document.addEventListener("click",t=>{const e=t.target.getAttribute("compass-link"),o=t.target.hasAttribute("new-tab");this.changeRoute(e,{},o)},!1),this.indexRoute=this.Routes.find(t=>"/"==t.route),this.indexRoute||console.error("The index route is not configured!"),this.notFoundRoute=this.Routes.find(t=>"/404"==t.route),this.notFoundRoute||console.error("The 404 route is not configured!"),this._startListeningForRouteChange()}changeRoute(t,e={},o=!1){if(!t)return;let n="#!"+(t.startsWith("/")?t:"/"+t),i=Object.keys(e);for(let t=0;t<i.length;t++)n+=0==t?"?":"&",n+=i[t]+"="+encodeURIComponent(e[i[t]]);if(o){let t=window.location.href;t.includes("#!")&&(t=t.split("#!")[0]);const e=`${t}${n}`;window.open(e,"_blank")}else window.location.hash=n}getUrlParameter(t){if(!location.href.includes("?"))return null;const e=location.href.split("?");if(!Array.isArray(e)||0==e.length)return null;const o=e[1].split("&");let n=null;for(let e=0;e<o.length;e++){const i=o[e].split("=");t==i[0]&&(n=i[1])}return n}_startListeningForRouteChange(){onhashchange=(()=>{let t=location.hash.replace("#!","");t.includes("?")&&(t=t.split("?")[0]);let e=this.Routes.find(e=>""==location.hash?"/"==e.route:e.route==t);if(!e){if(!this.notFoundRoute)return void console.error("Couldn't show the 404 route as it was not set up.");e=this.notFoundRoute}e.scripts?e.scripts.forEach(t=>{t.onRouteBecameVisible&&t.onRouteBecameVisible()}):e.element&&e.element.onRouteBecameVisible&&e.element.onRouteBecameVisible(),this.Routes.forEach(t=>{const o=t.route==e.route;t.element.style.display=o?"block":"none"});const o=new CustomEvent("route-change",{detail:{newRoute:t}});window.dispatchEvent(o)}),onhashchange()}async _fetchViewHtmlAsync(t){const e=await fetch(t);return await e.text()}}document.body.style.display="none",Router=new Compass,addEventListener("DOMContentLoaded",()=>{Router.init().then(()=>{document.body.style.display="block"})});